# -*- coding: utf-8 -*-

"""
manager

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from manager.models.vendor_product_options_api_get_list_vendor import VendorProductOptionsApiGetListVendor


class VendorProductOptionsApiGetList(object):

    """Implementation of the 'VendorProductOptionsApi.get_list' model.

    TODO: type model description here.

    Attributes:
        handle_generation (string): TODO: type description here.
        options (string): TODO: type description here.
        product_type (string): TODO: type description here.
        sku_generation (string): TODO: type description here.
        variations (string): TODO: type description here.
        vendor (VendorProductOptionsApiGetListVendor): TODO: type description
            here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "product_type": 'product_type',
        "handle_generation": 'handle_generation',
        "options": 'options',
        "sku_generation": 'sku_generation',
        "variations": 'variations',
        "vendor": 'vendor'
    }

    def __init__(self,
                 product_type=None,
                 handle_generation=None,
                 options=None,
                 sku_generation=None,
                 variations=None,
                 vendor=None):
        """Constructor for the VendorProductOptionsApiGetList class"""

        # Initialize members of the class
        self.handle_generation = handle_generation
        self.options = options
        self.product_type = product_type
        self.sku_generation = sku_generation
        self.variations = variations
        self.vendor = vendor

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        product_type = dictionary.get('product_type')
        handle_generation = dictionary.get('handle_generation')
        options = dictionary.get('options')
        sku_generation = dictionary.get('sku_generation')
        variations = dictionary.get('variations')
        vendor = VendorProductOptionsApiGetListVendor.from_dictionary(dictionary.get('vendor')) if dictionary.get('vendor') else None

        # Return an object of this model
        return cls(product_type,
                   handle_generation,
                   options,
                   sku_generation,
                   variations,
                   vendor)
