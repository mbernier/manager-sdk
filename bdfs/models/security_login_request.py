# -*- coding: utf-8 -*-

"""
bdfs

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class SecurityLoginRequest(object):

    """Implementation of the 'Security Login Request' model.

    TODO: type model description here.

    Attributes:
        password (string): The password for authentication
        provider (ProviderEnum): Choose an authentication provider
        refresh (bool): If true a refresh token is provided also
        username (string): The username for authentication

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "password": 'password',
        "provider": 'provider',
        "refresh": 'refresh',
        "username": 'username'
    }

    def __init__(self,
                 password=None,
                 provider=None,
                 refresh=None,
                 username=None):
        """Constructor for the SecurityLoginRequest class"""

        # Initialize members of the class
        self.password = password
        self.provider = provider
        self.refresh = refresh
        self.username = username

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        password = dictionary.get('password')
        provider = dictionary.get('provider')
        refresh = dictionary.get('refresh')
        username = dictionary.get('username')

        # Return an object of this model
        return cls(password,
                   provider,
                   refresh,
                   username)
