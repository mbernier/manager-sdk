# -*- coding: utf-8 -*-

"""
manager

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class VendorApiGetList(object):

    """Implementation of the 'VendorApi.get_list' model.

    TODO: type model description here.

    Attributes:
        address (string): TODO: type description here.
        corporate_phone (string): TODO: type description here.
        id (int): TODO: type description here.
        markup (float): TODO: type description here.
        name (string): TODO: type description here.
        support_email (string): TODO: type description here.
        support_phone (string): TODO: type description here.
        url (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "name": 'name',
        "address": 'address',
        "corporate_phone": 'corporate_phone',
        "id": 'id',
        "markup": 'markup',
        "support_email": 'support_email',
        "support_phone": 'support_phone',
        "url": 'url'
    }

    def __init__(self,
                 name=None,
                 address=None,
                 corporate_phone=None,
                 id=None,
                 markup=None,
                 support_email=None,
                 support_phone=None,
                 url=None):
        """Constructor for the VendorApiGetList class"""

        # Initialize members of the class
        self.address = address
        self.corporate_phone = corporate_phone
        self.id = id
        self.markup = markup
        self.name = name
        self.support_email = support_email
        self.support_phone = support_phone
        self.url = url

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        name = dictionary.get('name')
        address = dictionary.get('address')
        corporate_phone = dictionary.get('corporate_phone')
        id = dictionary.get('id')
        markup = dictionary.get('markup')
        support_email = dictionary.get('support_email')
        support_phone = dictionary.get('support_phone')
        url = dictionary.get('url')

        # Return an object of this model
        return cls(name,
                   address,
                   corporate_phone,
                   id,
                   markup,
                   support_email,
                   support_phone,
                   url)
