# -*- coding: utf-8 -*-

"""
bdfs

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Filter(object):

    """Implementation of the 'Filter' model.

    TODO: type model description here.

    Attributes:
        col (string): TODO: type description here.
        opr (string): TODO: type description here.
        value (object): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "col": 'col',
        "opr": 'opr',
        "value": 'value'
    }

    def __init__(self,
                 col=None,
                 opr=None,
                 value=None):
        """Constructor for the Filter class"""

        # Initialize members of the class
        self.col = col
        self.opr = opr
        self.value = value

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        col = dictionary.get('col')
        opr = dictionary.get('opr')
        value = dictionary.get('value')

        # Return an object of this model
        return cls(col,
                   opr,
                   value)
