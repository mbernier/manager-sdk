# -*- coding: utf-8 -*-

"""
bdfs

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class ProductsApiGetVendorShipping(object):

    """Implementation of the 'ProductsApi.get.VendorShipping' model.

    TODO: type model description here.

    Attributes:
        id (int): TODO: type description here.
        markup_shipping (bool): TODO: type description here.
        name (string): TODO: type description here.
        options (string): TODO: type description here.
        shipping_markup_amount (float): TODO: type description here.
        shipping_variable (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "name": 'name',
        "shipping_variable": 'shipping_variable',
        "id": 'id',
        "markup_shipping": 'markup_shipping',
        "options": 'options',
        "shipping_markup_amount": 'shipping_markup_amount'
    }

    def __init__(self,
                 name=None,
                 shipping_variable=None,
                 id=None,
                 markup_shipping=None,
                 options=None,
                 shipping_markup_amount=None):
        """Constructor for the ProductsApiGetVendorShipping class"""

        # Initialize members of the class
        self.id = id
        self.markup_shipping = markup_shipping
        self.name = name
        self.options = options
        self.shipping_markup_amount = shipping_markup_amount
        self.shipping_variable = shipping_variable

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        name = dictionary.get('name')
        shipping_variable = dictionary.get('shipping_variable')
        id = dictionary.get('id')
        markup_shipping = dictionary.get('markup_shipping')
        options = dictionary.get('options')
        shipping_markup_amount = dictionary.get('shipping_markup_amount')

        # Return an object of this model
        return cls(name,
                   shipping_variable,
                   id,
                   markup_shipping,
                   options,
                   shipping_markup_amount)
