# -*- coding: utf-8 -*-

"""
manager

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class ProductsApiPost(object):

    """Implementation of the 'ProductsApi.post' model.

    TODO: type model description here.

    Attributes:
        customer_photos (string): TODO: type description here.
        handle (string): TODO: type description here.
        name (string): TODO: type description here.
        options (string): TODO: type description here.
        orders (list of object): TODO: type description here.
        product_notes (list of object): TODO: type description here.
        product_type (string): TODO: type description here.
        seo_description (string): TODO: type description here.
        seo_name (string): TODO: type description here.
        sku (string): TODO: type description here.
        tags (string): TODO: type description here.
        variations (string): TODO: type description here.
        vendor (object): TODO: type description here.
        vendor_photos (string): TODO: type description here.
        vendor_product_options (object): TODO: type description here.
        vendor_shipping (object): TODO: type description here.
        vendor_sku (string): TODO: type description here.
        vendor_url (string): TODO: type description here.
        websites (list of object): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "handle": 'handle',
        "name": 'name',
        "sku": 'sku',
        "vendor_sku": 'vendor_sku',
        "vendor_url": 'vendor_url',
        "customer_photos": 'customer_photos',
        "options": 'options',
        "orders": 'orders',
        "product_notes": 'product_notes',
        "product_type": 'product_type',
        "seo_description": 'seo_description',
        "seo_name": 'seo_name',
        "tags": 'tags',
        "variations": 'variations',
        "vendor": 'vendor',
        "vendor_photos": 'vendor_photos',
        "vendor_product_options": 'vendor_product_options',
        "vendor_shipping": 'vendor_shipping',
        "websites": 'websites'
    }

    def __init__(self,
                 handle=None,
                 name=None,
                 sku=None,
                 vendor_sku=None,
                 vendor_url=None,
                 customer_photos=None,
                 options=None,
                 orders=None,
                 product_notes=None,
                 product_type=None,
                 seo_description=None,
                 seo_name=None,
                 tags=None,
                 variations=None,
                 vendor=None,
                 vendor_photos=None,
                 vendor_product_options=None,
                 vendor_shipping=None,
                 websites=None):
        """Constructor for the ProductsApiPost class"""

        # Initialize members of the class
        self.customer_photos = customer_photos
        self.handle = handle
        self.name = name
        self.options = options
        self.orders = orders
        self.product_notes = product_notes
        self.product_type = product_type
        self.seo_description = seo_description
        self.seo_name = seo_name
        self.sku = sku
        self.tags = tags
        self.variations = variations
        self.vendor = vendor
        self.vendor_photos = vendor_photos
        self.vendor_product_options = vendor_product_options
        self.vendor_shipping = vendor_shipping
        self.vendor_sku = vendor_sku
        self.vendor_url = vendor_url
        self.websites = websites

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        handle = dictionary.get('handle')
        name = dictionary.get('name')
        sku = dictionary.get('sku')
        vendor_sku = dictionary.get('vendor_sku')
        vendor_url = dictionary.get('vendor_url')
        customer_photos = dictionary.get('customer_photos')
        options = dictionary.get('options')
        orders = dictionary.get('orders')
        product_notes = dictionary.get('product_notes')
        product_type = dictionary.get('product_type')
        seo_description = dictionary.get('seo_description')
        seo_name = dictionary.get('seo_name')
        tags = dictionary.get('tags')
        variations = dictionary.get('variations')
        vendor = dictionary.get('vendor')
        vendor_photos = dictionary.get('vendor_photos')
        vendor_product_options = dictionary.get('vendor_product_options')
        vendor_shipping = dictionary.get('vendor_shipping')
        websites = dictionary.get('websites')

        # Return an object of this model
        return cls(handle,
                   name,
                   sku,
                   vendor_sku,
                   vendor_url,
                   customer_photos,
                   options,
                   orders,
                   product_notes,
                   product_type,
                   seo_description,
                   seo_name,
                   tags,
                   variations,
                   vendor,
                   vendor_photos,
                   vendor_product_options,
                   vendor_shipping,
                   websites)
