# -*- coding: utf-8 -*-

"""
bdfs

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from bdfs.api_helper import APIHelper
from bdfs.configuration import Server
from bdfs.controllers.base_controller import BaseController
from bdfs.http.auth.o_auth_2 import OAuth2
from bdfs.models.menu_response import MenuResponse
from bdfs.exceptions.m_400_exception import M400Exception


class MenuController(BaseController):

    """A Controller to access Endpoints in the bdfs API."""

    def __init__(self, config, call_back=None):
        super(MenuController, self).__init__(config, call_back)

    def menu_get(self):
        """Does a GET request to /menu/.

        Get the menu data structure. Returns a forest like structure with the
        menu the user has access to

        Returns:
            MenuResponse: Response from the API. Get menu data

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        # Prepare query URL
        _url_path = '/menu/'
        _query_builder = self.config.get_base_uri()
        _query_builder += _url_path
        _query_url = APIHelper.clean_url(_query_builder)

        # Prepare headers
        _headers = {
            'accept': 'application/json'
        }

        # Prepare and execute request
        _request = self.config.http_client.get(_query_url, headers=_headers)
        OAuth2.apply(self.config, _request)
        _response = self.execute_request(_request)

        # Endpoint and global error handling using HTTP status codes.
        if _response.status_code == 401:
            raise M400Exception('Unauthorized', _response)
        self.validate_response(_response)

        decoded = APIHelper.json_deserialize(_response.text, MenuResponse.from_dictionary)

        return decoded
