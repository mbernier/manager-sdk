# -*- coding: utf-8 -*-

"""
bdfs

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from bdfs.api_helper import APIHelper
from bdfs.models.product_notes_api_get_products import ProductNotesApiGetProducts
from bdfs.models.product_notes_api_get_user import ProductNotesApiGetUser


class ProductNotesApiGet(object):

    """Implementation of the 'ProductNotesApi.get' model.

    TODO: type model description here.

    Attributes:
        action_type (string): TODO: type description here.
        changed_by (ProductNotesApiGetUser): TODO: type description here.
        changed_on (datetime): TODO: type description here.
        created_by (ProductNotesApiGetUser): TODO: type description here.
        created_on (datetime): TODO: type description here.
        note (string): TODO: type description here.
        products (ProductNotesApiGetProducts): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "changed_by": 'changed_by',
        "created_by": 'created_by',
        "note": 'note',
        "products": 'products',
        "action_type": 'action_type',
        "changed_on": 'changed_on',
        "created_on": 'created_on'
    }

    def __init__(self,
                 changed_by=None,
                 created_by=None,
                 note=None,
                 products=None,
                 action_type=None,
                 changed_on=None,
                 created_on=None):
        """Constructor for the ProductNotesApiGet class"""

        # Initialize members of the class
        self.action_type = action_type
        self.changed_by = changed_by
        self.changed_on = APIHelper.RFC3339DateTime(changed_on) if changed_on else None
        self.created_by = created_by
        self.created_on = APIHelper.RFC3339DateTime(created_on) if created_on else None
        self.note = note
        self.products = products

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        changed_by = ProductNotesApiGetUser.from_dictionary(dictionary.get('changed_by')) if dictionary.get('changed_by') else None
        created_by = ProductNotesApiGetUser.from_dictionary(dictionary.get('created_by')) if dictionary.get('created_by') else None
        note = dictionary.get('note')
        products = ProductNotesApiGetProducts.from_dictionary(dictionary.get('products')) if dictionary.get('products') else None
        action_type = dictionary.get('action_type')
        changed_on = APIHelper.RFC3339DateTime.from_value(dictionary.get("changed_on")).datetime if dictionary.get("changed_on") else None
        created_on = APIHelper.RFC3339DateTime.from_value(dictionary.get("created_on")).datetime if dictionary.get("created_on") else None

        # Return an object of this model
        return cls(changed_by,
                   created_by,
                   note,
                   products,
                   action_type,
                   changed_on,
                   created_on)
