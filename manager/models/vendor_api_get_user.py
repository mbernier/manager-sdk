# -*- coding: utf-8 -*-

"""
manager

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from manager.api_helper import APIHelper


class VendorApiGetUser(object):

    """Implementation of the 'VendorApi.get.User' model.

    TODO: type model description here.

    Attributes:
        active (bool): TODO: type description here.
        changed_on (datetime): TODO: type description here.
        created_on (datetime): TODO: type description here.
        email (string): TODO: type description here.
        fail_login_count (int): TODO: type description here.
        first_name (string): TODO: type description here.
        id (int): TODO: type description here.
        last_login (datetime): TODO: type description here.
        last_name (string): TODO: type description here.
        login_count (int): TODO: type description here.
        password (string): TODO: type description here.
        username (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "email": 'email',
        "first_name": 'first_name',
        "last_name": 'last_name',
        "username": 'username',
        "active": 'active',
        "changed_on": 'changed_on',
        "created_on": 'created_on',
        "fail_login_count": 'fail_login_count',
        "id": 'id',
        "last_login": 'last_login',
        "login_count": 'login_count',
        "password": 'password'
    }

    def __init__(self,
                 email=None,
                 first_name=None,
                 last_name=None,
                 username=None,
                 active=None,
                 changed_on=None,
                 created_on=None,
                 fail_login_count=None,
                 id=None,
                 last_login=None,
                 login_count=None,
                 password=None):
        """Constructor for the VendorApiGetUser class"""

        # Initialize members of the class
        self.active = active
        self.changed_on = APIHelper.RFC3339DateTime(changed_on) if changed_on else None
        self.created_on = APIHelper.RFC3339DateTime(created_on) if created_on else None
        self.email = email
        self.fail_login_count = fail_login_count
        self.first_name = first_name
        self.id = id
        self.last_login = APIHelper.RFC3339DateTime(last_login) if last_login else None
        self.last_name = last_name
        self.login_count = login_count
        self.password = password
        self.username = username

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        email = dictionary.get('email')
        first_name = dictionary.get('first_name')
        last_name = dictionary.get('last_name')
        username = dictionary.get('username')
        active = dictionary.get('active')
        changed_on = APIHelper.RFC3339DateTime.from_value(dictionary.get("changed_on")).datetime if dictionary.get("changed_on") else None
        created_on = APIHelper.RFC3339DateTime.from_value(dictionary.get("created_on")).datetime if dictionary.get("created_on") else None
        fail_login_count = dictionary.get('fail_login_count')
        id = dictionary.get('id')
        last_login = APIHelper.RFC3339DateTime.from_value(dictionary.get("last_login")).datetime if dictionary.get("last_login") else None
        login_count = dictionary.get('login_count')
        password = dictionary.get('password')

        # Return an object of this model
        return cls(email,
                   first_name,
                   last_name,
                   username,
                   active,
                   changed_on,
                   created_on,
                   fail_login_count,
                   id,
                   last_login,
                   login_count,
                   password)
