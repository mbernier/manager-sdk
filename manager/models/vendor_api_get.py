# -*- coding: utf-8 -*-

"""
manager

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from manager.api_helper import APIHelper
from manager.models.vendor_api_get_user import VendorApiGetUser
from manager.models.vendor_api_get_vendor_contact import VendorApiGetVendorContact


class VendorApiGet(object):

    """Implementation of the 'VendorApi.get' model.

    TODO: type model description here.

    Attributes:
        address (string): TODO: type description here.
        changed_by (VendorApiGetUser): TODO: type description here.
        changed_on (datetime): TODO: type description here.
        contacts (VendorApiGetVendorContact): TODO: type description here.
        corporate_phone (string): TODO: type description here.
        created_by (VendorApiGetUser): TODO: type description here.
        created_on (datetime): TODO: type description here.
        markup (float): TODO: type description here.
        name (string): TODO: type description here.
        support_email (string): TODO: type description here.
        support_phone (string): TODO: type description here.
        url (string): TODO: type description here.
        vendor_is_manufacturer (bool): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "changed_by": 'changed_by',
        "contacts": 'contacts',
        "created_by": 'created_by',
        "name": 'name',
        "address": 'address',
        "changed_on": 'changed_on',
        "corporate_phone": 'corporate_phone',
        "created_on": 'created_on',
        "markup": 'markup',
        "support_email": 'support_email',
        "support_phone": 'support_phone',
        "url": 'url',
        "vendor_is_manufacturer": 'vendor_is_manufacturer'
    }

    def __init__(self,
                 changed_by=None,
                 contacts=None,
                 created_by=None,
                 name=None,
                 address=None,
                 changed_on=None,
                 corporate_phone=None,
                 created_on=None,
                 markup=None,
                 support_email=None,
                 support_phone=None,
                 url=None,
                 vendor_is_manufacturer=None):
        """Constructor for the VendorApiGet class"""

        # Initialize members of the class
        self.address = address
        self.changed_by = changed_by
        self.changed_on = APIHelper.RFC3339DateTime(changed_on) if changed_on else None
        self.contacts = contacts
        self.corporate_phone = corporate_phone
        self.created_by = created_by
        self.created_on = APIHelper.RFC3339DateTime(created_on) if created_on else None
        self.markup = markup
        self.name = name
        self.support_email = support_email
        self.support_phone = support_phone
        self.url = url
        self.vendor_is_manufacturer = vendor_is_manufacturer

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        changed_by = VendorApiGetUser.from_dictionary(dictionary.get('changed_by')) if dictionary.get('changed_by') else None
        contacts = VendorApiGetVendorContact.from_dictionary(dictionary.get('contacts')) if dictionary.get('contacts') else None
        created_by = VendorApiGetUser.from_dictionary(dictionary.get('created_by')) if dictionary.get('created_by') else None
        name = dictionary.get('name')
        address = dictionary.get('address')
        changed_on = APIHelper.RFC3339DateTime.from_value(dictionary.get("changed_on")).datetime if dictionary.get("changed_on") else None
        corporate_phone = dictionary.get('corporate_phone')
        created_on = APIHelper.RFC3339DateTime.from_value(dictionary.get("created_on")).datetime if dictionary.get("created_on") else None
        markup = dictionary.get('markup')
        support_email = dictionary.get('support_email')
        support_phone = dictionary.get('support_phone')
        url = dictionary.get('url')
        vendor_is_manufacturer = dictionary.get('vendor_is_manufacturer')

        # Return an object of this model
        return cls(changed_by,
                   contacts,
                   created_by,
                   name,
                   address,
                   changed_on,
                   corporate_phone,
                   created_on,
                   markup,
                   support_email,
                   support_phone,
                   url,
                   vendor_is_manufacturer)
